#!/bin/bash
. ./benchmarks_environment.sh
PATH=/bin:/usr/bin:/usr/sbin:$PATH

# Telemetry wrapper around the benchmarks
function startprofiling_perfspec {
	nohup bash ./binaries/perfspect/start_perfspect.sh $DIR $1 >> $DIR/LOG 2>&1 &
}

function stopprofiling_perfspec {
	nohup bash ./binaries/perfspect/stop_perfspect.sh >> $DIR/LOG 2>&1 &
	sleep 10
}
#ALL Benchmark TESTS
echo "Benchmarks started at: $DATE " >>$DIR/INFO

# Check if MLC should run (only if not inside a container)
if [[ -z "$CPUSET" ]]; then
    echo "Running MLC with perfspec..."
    startprofiling_perfspec mlc
    ./benchmarks/mlc.py
    stopprofiling_perfspec
else
    echo "⚠️ Skipping MLC benchmark because CPUSET is set (CPUSET=$CPUSET), indicating containerized execution." | tee -a $DIR/INFO
fi

echo "Running Compress-7zip with perfspec..."
startprofiling_perfspec compress-7zip
./benchmarks/compress-7zip.py
stopprofiling_perfspec
#
echo "Running specjvm2008 with perfspec..."
startprofiling_perfspec specjvm2008
./benchmarks/specjvm2008.py
stopprofiling_perfspec
#echo "Running ffmpeg with perfspec..."
#startprofiling_perfspec ffmpeg
#/usr/share/autobench/java17-benchmarks/ffmpeg.py
#stopprofiling_perfspec
#
echo "Running renaissance with perfspec..."
startprofiling_perfspec renaissance
./benchmarks/renaissance.py
stopprofiling_perfspec

echo "Running lmbench-bw with perfspec..."
startprofiling_perfspec lmbench-bw
./benchmarks/lmbench-bw.py
stopprofiling_perfspec
#
#startprofiling_perfspec lmbench-mhz
#/usr/share/autobench/java17-benchmarks/lmbench-mhz.py
#stopprofiling_perfspec
#
echo "Running lmbench-mem with perfspec..."
startprofiling_perfspec lmbench-mem
./benchmarks/lmbench-mem.py
stopprofiling_perfspec

echo "Running lmbench-ops with perfspec..."
startprofiling_perfspec lmbench-ops
./benchmarks/lmbench-ops.py
stopprofiling_perfspec

echo "Running openssl with perfspec..."
startprofiling_perfspec openssl
./benchmarks/openssl.py
stopprofiling_perfspec

echo "Running stream with perfspec..."
startprofiling_perfspec stream
./benchmarks/stream.py
stopprofiling_perfspec

echo "Running sysbench-cpu with perfspec..."
startprofiling_perfspec sysbench-cpu
./benchmarks/sysbench-cpu.py
stopprofiling_perfspec

echo "Running sysbench-mem with perfspec..."
startprofiling_perfspec sysbench-mem
./benchmarks/sysbench-mem.py
stopprofiling_perfspec

# Copy to LATEST Directory
if [[ -z "$GROUP" ]]; then
cp -r $DIR/* $LDIR
fi
DATE=$(date '+%m-%d-%Y_%H-%M')
echo "Benchmarks ended at: $DATE" >> $DIR/INFO
