#!/bin/bash

. ./benchmarks_environment.sh

PATH=/bin:/usr/bin:/usr/sbin:$PATH

function startprofiling_uProf {
    echo " DEBUG: In startprofiling_uProf function"
	nohup bash ./binaries/uProf/start_uProf.sh $DIR $1 >> $DIR/LOG 2>&1 &
}

function stopprofiling_uProf {
    echo " DEBUG: In stopprofiling_uProf function"
	nohup bash ./binaries/uProf/stop_uProf.sh >> $DIR/LOG 2>&1 &
	sleep 10
}

#ALL Benchmark TESTS
echo "Benchmarks started at: $DATE " >>$DIR/INFO

#Check if multiple containers are running
if [[ -z "$GROUP" ]]; then
	echo "Running MLC with uProf..."
    startprofiling_uProf mlc
    ./benchmarks/mlc.py
    stopprofiling_uProf
else
    echo "⚠️ Skipping MLC benchmark because multiple containers are running (GROUP=$GROUP)." | tee -a $DIR/INFO
fi

echo "Running Compress-7zip with uProf..."
startprofiling_uProf compress-7zip
./benchmarks/compress-7zip.py
stopprofiling_uProf

echo "Running specjvm2008 with uProf..."
startprofiling_uProf specjvm2008
./benchmarks/specjvm2008.py
stopprofiling_uProf

echo "Running ffmpeg with uProf..."
startprofiling_uProf ffmpeg
/usr/share/autobench/java17-benchmarks/ffmpeg.py
stopprofiling_uProf

echo "Running specjbb2015 with uProf..."
startprofiling_uProf specjbb2015
./benchmarks/specjbb2015.sh
stopprofiling_uProf

echo "Running renaissance with uProf..."
startprofiling_uProf renaissance
./benchmarks/renaissance.py
stopprofiling_uProf

echo "Running lmbench-bw with uProf..."
startprofiling_uProf lmbench-bw
./benchmarks/lmbench-bw.py
stopprofiling_uProf

echo "Running lmbench-mem with uProf..."
startprofiling_uProf lmbench-mem
./benchmarks/lmbench-mem.py
stopprofiling_uProf

echo "Running lmbench-ops with uProf..."
startprofiling_uProf lmbench-ops
./benchmarks/lmbench-ops.py
stopprofiling_uProf

echo "Running openssl with uProf..."
startprofiling_uProf openssl
./benchmarks/openssl.py
stopprofiling_uProf

echo "Running stream with uProf..."
startprofiling_uProf stream
./benchmarks/stream.py
stopprofiling_uProf

echo "Running sysbench-cpu with uProf..."
startprofiling_uProf sysbench-cpu
./benchmarks/sysbench-cpu.py
stopprofiling_uProf

echo "Running sysbench-mem with uProf..."
startprofiling_uProf sysbench-mem
./benchmarks/sysbench-mem.py
stopprofiling_uProf

# Copy to LATEST Directory
if [[ -z "$GROUP" ]]; then
cp -r $DIR/* $LDIR
fi
DATE=$(date '+%m-%d-%Y_%H-%M')
echo "Benchmarks ended at: $DATE" >> $DIR/INFO
